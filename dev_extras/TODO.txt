TODO:

- hook /f reload  to cause FactionsPlus to reload from disk too

- using "/f peaceful factiontag" from Factions will bypass the payment employed for "/f togglestate" 
  see if we're considering peaceful and togglestate the same thing, or they use different permissions ?
  ie. maybe only admins can use peaceful but any others can use togglestate (if different permissions are in effect)

- maybe don't add /f gc and /f fc commands if Factions is 1.7 (easy to do but then the player might wonder why these 
commands aren't there, thus by allowing them to exist in 1.7 also they are showing the message that 1.7 actually doesn't
support chat modes)
  Actually 1.7 can still do these commands but only if we tell the chats (which could be 3: EssentialsChat, HeroChat, CAPI)
  to switch channels somehow, seems tough... more info in this pkg(s): com.massivecraft.factions.integration.*

- must check what's /f toggle  supposed to do exactly, because the behaviour seems odd (also fix the possible NPE when faction inexistent)
  do this before release
  do check this! leadersCanToggleState

- newest version tosses a 'Strange argument. Use the command like this: /f' whenever using any commands. Figure it has something to do with some changes
	made by basicsensei. I'll look into it tomorrow if it isn't fixed.
	//I can't see anything wrong because I cannot reproduce - basicsensei.

- look into setting permissions or groups of perms inside plugins.yml  with their description

- make bridging methods call-able from Utilities instead via Bridge.factions similar to existing ones like isLeader()
- make bridge for something like FPLayer.getRole()

- teleporting to /home could be bypassed if /home has a warmup and another command is executed right after but before
  teleport actually happens
  note to self: can be bypasses only if /home has a warmup delay, but not if it has a cooldown delay
  note2: if using boosCooldown plugin (which allows both warmup & cooldown for /home ) our constraint cannot be bypassed
    therefore, best workaround for this(can only be done by server owners) would be to stop essentials from having a
    warmup on teleport (ie. set to 0) and instead use the boosCooldown plugin for the warmups for commands;
    however, boosCooldown will still charge you money if the tp will be denied by us
  -failedto: actually detect if essentials tp warmup is >0 and suggest on console to disable it and use boosCooldown instead
         to avoid bypassing /home checks to teleport into enemy land
  -actually just deny any teleports done via Cause.COMMAND and only allow those whitelisted to succeed - seems like a good compromise ...
  
  
- prevent non-faction members from LWC locking stuff in our faction land

- make sure that obsolete/renamed config options in the cfg file are not carried over indefinitely
  either warn or auto remove those that have renamed while carrying the old value to the newly renamed one or
  simply only keep the config options that have valid names that are actually used in the current FP version
  (note: this doesn't currently apply for we have no such old/obsolete config options)
  -definitely warn if some unused options are found in the config, so that admin doesn't try to set those and expect effects



//done- fix java.lang.NoSuchFieldError: senderMustBeModerator  which went unseen due to using both Factions .jar in classpath instead of Factions project ;)

- find a way to keep "#" comments inside the config when transferring them from defaults and old config
  but at the same time detect and keep the values in the old config(currently does so) rather than just write over the defaults by direct file copy(currently this doesn't happen)
  besides on save() it the comments are always lost (currently)
  
- investigate how to hold and retrieve a list of strings in yaml config


//fixed- stumped as to why blockCPublicAccessOnNonOwnFactionTerritory is not added from defaults into the existing file

- update .settings.eclipse and .classpath etc.

- make sure empty sections from existing config are removed, ie. mainly after their children which were obsolete/old aliases 
  were removed - hmm maybe at the exact same time when removing those, can detect if parent is empty and kill it, and then when
  config save happens, they are already gone
  
- add option to disable ender pearls teleporting in safe/warzones too

- recheck all code comments and remove obsolete ones, also rename some methods and/or comment them, ie. parsify()

- clean unused static hashmaps after they're used for config computing, on reload

- disallow enabling plugin if X config options are detected as invalid, where X would be configurable ie. 5
  - also add same thing for DUPlicates

- remove config_defaults.yml (and config.yml) that's located inside .jar (/project root) they are not needed anymore
    BUT FIRST do check if defaults are the same with the coded ones
    
- try find (from others) config.yml from 0.4.6 and test if successfuly imports (should be, but could have missed 1-2 options)

- check and clean the unused imports

- check all current occurrences of config options so that they are not used without the "._" ie. used the instance instead of the
  value
  
- updateCheck into own thread so it's non-blocking main onEnable(), could maybe use invokeLater

//done: recalculateLineNumbers - WYSection method to recalculate all line numbers based on current subtree

//done first part- add metadata to WYItem or WYIdentifier to be able to mark as duplicate/invalid/overridden, so that later we can read
  this and apply those after we've inserted the new/missing lines, and after having called the WYSection.recalcLines()
  
- set textual comments for each option, in java code on annotation
- actually try to write those comments above the fields IF they are not already set (ignoring empty/whitespace lines 
  in between)
  
  
